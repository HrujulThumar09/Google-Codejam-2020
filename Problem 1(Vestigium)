    #include <bits/stdc++.h>
    #define int         long long
    #define pb          push_back
    #define pf          push_front
    #define pii         pair<int,int>
    #define vi          vector<int>
    #define vp          vector<pair<int,int>,int>
    #define pb          push_back
    #define mii         map<int,int>
    #define pii         pair<int,int>
    #define msi         map<string,int>
    #define psi         pair<string,int>
    #define mpi         map<pair<int,int>,int>
    #define fo(i,l,u)   for(i=l;i<u;i++)
    #define rfo(i,l,u)  for(i=l;i>=u;i--)
    #define ef          else if
    # define MOD        10^9+7

    using namespace std;
    int gcd(int a, int b) {
        if (a == 0)
            return b;
        return gcd(b % a, a);
    }

    int power(int x,  int y, int p){
        int res = 1;      // Initialize result
        x = x % p;  // Update x if it is more than or
        while (y > 0)
        {
            if (y & 1)
                res = (res*x) % p;
            y = y>>1; // y = y/2
            x = (x*x) % p;
        }
        return res;
    }

    int mod_inv(int a,int m){
        a=a%m;
        return power(a,m-2,m)%MOD;
    }

    int lcm(int a, int b){
        return (a*b)/gcd(a, b);
    }

    bool mod(double a,double b) {
        return a/b - floor(a/b);}

    int logb(int base, int x) {
        return (log(x) / log(base));
    }
    int parent[1000000],Size[10000000];
    int find_set(int x)
    {
        if(x==parent[x])return x;
        return parent[x]=find_set(parent[x]);
    }

    void Union(int x,int y)
    {
        x=find_set(x);
        y=find_set(y);
        if(x!=y)
        {
            if(Size[x]>Size[y])
            {
                parent[y]=parent[x];
                Size[x]+=Size[y];
            }
            else{parent[x]=parent[y];
                Size[y]+=Size[x];
            }
        }
    }
    void make_set(int x)
    {
        parent[x]=x;
        Size[x]=1;
    }
    signed main()
    {
        int t;
        cin>>t;
        for(int i=1;i<=t;i++){
            int n;
            cin>>n;
            
            int a[n][n],trace=0,c=0;
            
            for(int j=0;j<n;j++)
            {
                bool fl=false;
                map<int,int> m;
                for(int k=0;k<n;k++)
                {
                    cin>>a[j][k];
                    if(j==k)trace+=a[j][k];
                        m[a[j][k]]++;
                if(m[a[j][k]]!=1) fl=true;;
                }
                if(fl)c++;
            }
            int r=0;
             
            for(int j=0;j<n;j++)
            {
                bool fl=false;
                map<int,int> m;
                for(int k=0;k<n;k++)
                {
                        m[a[k][j]]++;
                        if(m[a[k][j]]!=1) fl=true;;
                }
                if(fl)r++;
                //cout<<c<<endl;
            }
            cout<<"Case #"<<i<<": "<<trace<<" "<<c<<" "<<r<<endl;
        }
    }
